@font-face {
  font-family: 'Cuprum';
  src: local('Cuprum'), local('Cuprum-Regular'), url("../fonts/cuprum-400-normal.woff2") format('woff2'), url("../fonts/cuprum-400-normal.woff") format('woff');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Cuprum';
  src: local('Cuprum Bold'), local('Cuprum-Bold'), url("../fonts/cuprum-700-normal.woff2") format('woff2'), url("../fonts/cuprum-700-normal.woff") format('woff');
  font-weight: 700;
  font-style: normal;
}
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
details,
section,
summary,
aside,
main,
menu,
nav,
figcaption,
figure,
footer,
header,
hgroup {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
dfn {
  font-style: italic;
}
mark {
  background: #ff0;
  color: #000;
}
b,
strong {
  font-weight: bold;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  cursor: pointer;
  -webkit-appearance: button;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type='checkbox'],
input[type='radio'] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}
input[type='search'] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
main {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}
audio:not([controls]),
[hidden] {
  display: none;
}
ul {
  padding: 0;
  margin: 0;
  list-style: none outside none;
}
ul li {
  padding: 0;
  left: 0;
}
body {
  font-size: 22.43px;
  line-height: 1.954079358em;
  font-family: PT Sans, sans-serif;
  background: #797979;
  position: relative;
  color: #2f1b15;
}
.container {
  background: url("../images/bg.jpg") repeat;
  width: 1000px;
  -webkit-box-sizing: ;
  -moz-box-sizing: ;
  box-sizing: ;
  margin-left: auto;
  margin-right: auto;
}
.main-header {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  zoom: 1;
  padding: 36px 54px 17px 45px;
}
.main-header:before,
.main-header:after {
  content: "";
  display: table;
}
.main-header:after {
  clear: both;
}
.logo {
  position: relative;
  float: left;
  margin-top: 12px;
}
.logo__link,
.logo__img {
  display: block;
}
.logo__text {
  position: absolute;
  left: -9999px;
}
.logo__signature {
  font-size: 0.445831476em;
  line-height: 1.486847971;
  font-weight: 400;
  margin-left: 7px;
  margin-top: -5px;
}
.stamp {
  float: right;
}
.main-title {
  text-align: center;
  margin-top: 0;
  padding-right: 42px;
  margin-bottom: 40px;
}
.content {
  width: 782px;
  margin-left: auto;
  margin-right: auto;
  padding-bottom: 67px;
}
.data {
  margin-bottom: 27px;
}
.data__item {
  zoom: 1;
}
.data__item:before,
.data__item:after {
  content: "";
  display: table;
}
.data__item:after {
  clear: both;
}
.data__item .data__label {
  display: block;
  float: left;
  margin-top: 17px;
  margin-right: 16px;
  font-weight: 700;
  cursor: pointer;
}
.data__item .data__input {
  float: left;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding-left: 15px;
  padding-right: 15px;
  padding-top: 2px;
  padding-bottom: 3px;
  border: 0 none;
  outline: 0 none;
  font-family: Courier New, sans-serif;
  font-size: 1.337494427em;
  line-height: 1.604993313em;
  background: transparent url("../images/line.png") no-repeat bottom center;
  -webkit-background-size: 100%;
  -moz-background-size: 100%;
  background-size: 100%;
}
.data__item--fullname .data__input {
  width: 630px;
}
.data__item--date .data__label {
  margin-right: 11px;
  margin-bottom: 3px;
}
.data__item--date .data__input {
  width: 622px;
}
.data__item--location .data__input {
  width: 578px;
  padding-bottom: 1px;
}
.data__item--skype .data__label {
  margin-top: 20px;
  margin-right: 14px;
}
.data__item--skype .data__input {
  width: 701px;
  padding-top: 7px;
  padding-bottom: 0;
}
.data__item--email .data__label {
  margin-top: 21px;
  margin-right: 15px;
}
.data__item--email .data__input {
  width: 700px;
  padding-top: 5px;
  padding-bottom: 0;
}
.htmlacademy {
  zoom: 1;
  margin-bottom: 23px;
  font-weight: 700;
}
.htmlacademy:before,
.htmlacademy:after {
  content: "";
  display: table;
}
.htmlacademy:after {
  clear: both;
}
.htmlacademy__graduate {
  float: left;
  margin-right: 25px;
}
.htmlacademy__link:hover {
  text-decoration: none;
}
.htmlacademy__choose {
  float: left;
  zoom: 1;
  padding-top: 1px;
}
.htmlacademy__choose:before,
.htmlacademy__choose:after {
  content: "";
  display: table;
}
.htmlacademy__choose:after {
  clear: both;
}
.htmlacademy__choose-item {
  float: left;
  margin-right: 14px;
}
.htmlacademy__choose-elem {
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
  background: url("../images/sprites/radio.png") no-repeat -62px 0;
  width: 40px;
  height: 46px;
}
.htmlacademy__choose-text {
  cursor: pointer;
}
.htmlacademy__choose-input {
  position: absolute;
  left: -9999px;
}
.htmlacademy__choose-input:checked + .htmlacademy__choose-elem {
  background-position: 0 0;
}
.skills {
  zoom: 1;
  margin-bottom: 65px;
  font-weight: 700;
}
.skills:before,
.skills:after {
  content: "";
  display: table;
}
.skills:after {
  clear: both;
}
.skills__instruction {
  margin-top: 0;
  margin-bottom: 13px;
  padding-left: 19px;
  padding-right: 18px;
  font-size: 0.624164066em;
  line-height: 1.671501104em;
  font-weight: 400;
  color: #3d3d3d;
  letter-spacing: -0.007em;
}
.skills__list {
  zoom: 1;
  float: left;
  letter-spacing: -0.035em;
}
.skills__list:before,
.skills__list:after {
  content: "";
  display: table;
}
.skills__list:after {
  clear: both;
}
.skills__list--first {
  margin-right: 48px;
  width: 210px;
}
.skills__list--second {
  margin-right: 35px;
  width: 245px;
}
.skills__list--third {
  width: 215px;
}
.skills__item {
  line-height: 1.560410165em;
}
.skills__label {
  position: relative;
  cursor: pointer;
  display: inline-block;
  vertical-align: top;
  padding-left: 29px;
}
.skills__elem:before {
  content: '';
  position: absolute;
  width: 23px;
  height: 28px;
  background: url("../images/sprites/checkbox.png") no-repeat 0 0;
  left: 2px;
  top: 1px;
}
.skills__input {
  position: absolute;
  left: -9999px;
}
.skills__input:checked + .skills__elem:before {
  background: url("../images/sprites/checkbox.png") no-repeat -43px 0;
}
.skills__text {
  line-height: 1.1em;
  display: inline-block;
  vertical-align: top;
  padding-top: 6px;
}
.js-skill__title {
  padding: 0 0.44em;
  font-weight: 700;
  margin-bottom: 7px;
}
.js-skill__levels {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding-left: 13px;
  margin-bottom: 39px;
}
.js-skill__level {
  display: inline-block;
  vertical-align: top;
  font-size: 0.579580918em;
  line-height: 1.384166667em;
  padding-top: 4px;
  padding-bottom: 5px;
  font-weight: bold;
}
.js-skill__level--zero {
  width: 139px;
}
.js-skill__level--easy {
  width: 221px;
}
.js-skill__level--medium {
  width: 175px;
  margin-right: 73px;
}
.js-skill__level--hard {
  width: 137px;
  padding-top: 10px;
}
.ui-widget-content {
  position: relative;
  padding-top: 25px;
  width: 766px;
  height: 28px;
  border: 0px;
  background: url("../images/rectangle.png") no-repeat;
  margin: 0 0.3em;
}
.ui-slider-handle.ui-state-default.ui-corner-all {
  width: 17px;
  height: 14px;
  background: url("../images/triangle.png") no-repeat;
  display: inline-block;
  position: absolute;
  top: 10px;
  outline: 0 none;
  border: 0 none;
  cursor: pointer;
}
.date__label {
  display: inline-block;
  vertical-align: top;
  margin-right: 11px;
  margin-top: 14px;
  font-weight: 700;
  cursor: pointer;
}
.date__input {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  width: 206px;
  outline: 0 none;
  border: 0 none;
  background: transparent url("../images/sm-line.png") no-repeat bottom center;
  -webkit-background-size: 100%;
  -moz-background-size: 100%;
  background-size: 100%;
  font-family: Courier New, sans-serif;
  line-height: 0.722456352em;
  font-size: 1.314060447em;
  padding-left: 11px;
  padding-bottom: 7px;
}

/*# sourceMappingURL=data:application/json;base64, */
